[{"/Users/alessandro/Documents/Projects/netflixclone/src/index.js":"1","/Users/alessandro/Documents/Projects/netflixclone/src/App.js":"2","/Users/alessandro/Documents/Projects/netflixclone/src/tmdb.js":"3","/Users/alessandro/Documents/Projects/netflixclone/src/components/MovieRow.js":"4","/Users/alessandro/Documents/Projects/netflixclone/src/components/featuredMovie.js":"5"},{"size":196,"mtime":1611881826604,"results":"6","hashOfConfig":"7"},{"size":1168,"mtime":1619657984722,"results":"8","hashOfConfig":"7"},{"size":1923,"mtime":1611884609925,"results":"9","hashOfConfig":"7"},{"size":618,"mtime":1611885950239,"results":"10","hashOfConfig":"7"},{"size":150,"mtime":1619658025815,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1oi00jf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alessandro/Documents/Projects/netflixclone/src/index.js",[],["25","26"],"/Users/alessandro/Documents/Projects/netflixclone/src/App.js",["27","28","29"],"/Users/alessandro/Documents/Projects/netflixclone/src/tmdb.js",["30"],"const API_KEY = 'a1b2f514b71b98f4fdeabd6fae26bd24';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/*\n- originals\n- recommended / trending\n- top 10\n- action\n- comedy\n- horror\n- romance\n- docs\n*/\n\nconst getData = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\nexport default {\n    getList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Netflix Originals',\n                items: await getData(`/discover/tv?with_network=213&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Your Recommendations',\n                items: await getData(`/trending/all/week?api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Top Rated',\n                items: await getData(`/movie/top_rated?api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Action',\n                items: await getData(`/discover/movie?with_genres=28&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comedy',\n                items: await getData(`/discover/movie?with_genres=35&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Horror',\n                items: await getData(`/discover/movie?with_genres=27&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await getData(`/discover/movie?with_genres=10749&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentaries',\n                items: await getData(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\n            },\n        ];\n    }\n}","/Users/alessandro/Documents/Projects/netflixclone/src/components/MovieRow.js",["31"],"import React from 'react';\nimport './MovieRow.css';\n\nexport default ({title, items}) => {\n    return (\n        <div className=\"movieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--listarea\">\n                <div className=\"movieRow-list\">\n                {items.results.length > 0 && items.results.map((item, key)=>(\n               <div key={key} className=\"movieRow--item\">\n                    <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n               </div>\n            ))}\n\n                </div>\n\n            </div>\n        </div>\n    );\n}","/Users/alessandro/Documents/Projects/netflixclone/src/components/featuredMovie.js",["32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":7,"column":1,"nodeType":"39","endLine":44,"endColumn":2},{"ruleId":"40","severity":1,"message":"41","line":10,"column":24,"nodeType":"42","messageId":"43","endLine":10,"endColumn":38},{"ruleId":"40","severity":1,"message":"44","line":20,"column":11,"nodeType":"42","messageId":"43","endLine":20,"endColumn":19},{"ruleId":"37","severity":1,"message":"45","line":21,"column":1,"nodeType":"39","endLine":66,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":4,"column":1,"nodeType":"39","endLine":21,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":4,"column":1,"nodeType":"39","endLine":10,"endColumn":2},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'setFeatureData' is assigned a value but never used.","Identifier","unusedVar","'selected' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]